{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","components/App.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","link","likes","name","owner","_id","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","onClick","src","alt","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","map","card","key","Footer","PopupWithForm","title","children","buttonTitle","isOpen","onClose","onSubmit","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","type","value","id","required","minLength","maxLength","onChange","e","target","preventDefault","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","ref","placeholder","current","AddPlacePopup","onSubmitCard","cardNameRef","cardLinkRef","ImagePopup","api","url","headers","this","fetch","then","res","_getResponseData","method","body","JSON","stringify","items","ok","json","Promise","reject","status","authorization","App","isEditProfilePopupOpen","isOpenEditProfile","isAddPlacePopupOpen","isOpenAddPlace","isEditAvatarPopupOpen","isOpenEditAvatar","selectedCard","isOpenSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getCardsFromServer","userInfo","data","item","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","user","changeUserInfo","changeAvatar","addNewCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a23cded8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n  return(\r\n    <header className=\"header\">\r\n      <div className=\"logo\"></div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React  from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({link, likes, name, owner, _id, onCardClick, onCardLike, onCardDelete}){\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const handleCardClick = () =>{\r\n    onCardClick({link, name});\r\n  }\r\n\r\n  const handleLikeClick = () =>{\r\n    onCardLike({_id, likes});\r\n  }\r\n\r\n  const handleDeleteClick = () =>{\r\n    onCardDelete({_id});\r\n  }\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `${isOwn ? 'card__trash' : 'card__trash_hidden'}`\r\n  ); \r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = likes.some(i => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `${isLiked ? 'card__like_black' : 'card__like'}`\r\n  ); \r\n  \r\n  return(\r\n    <div className=\"templateCard\">\r\n        <li className=\"card\">\r\n          <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n          <img src={link} alt=\"Место из названия\" className=\"card__picture\"  onClick={handleCardClick} />\r\n          <div className=\"card__description\">\r\n            <h3 className=\"card__title\">{name}</h3>\r\n            <div className=\"card__likeContainer\">\r\n              <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n              <span className=\"card__likeNumbers\">{likes.length}</span>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete}){\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  \r\n  return(\r\n    <>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__containerImage\">\r\n          <img className=\"profile__image\" src={currentUser.avatar} alt=\"Аватар\" onClick={onEditAvatar} />\r\n        </div>\r\n        <div className=\"profile__info\"> \r\n          <div className=\"profile__edit\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button className=\"profile__button\"  onClick={onEditProfile}></button>\r\n          </div>\r\n          <p className=\"profile__about\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__addPicture\" onClick={onAddPlace}></button>\r\n      </section>\r\n\r\n      <ul className=\"cardsList\">\r\n        {cards.map(card => <Card key={card._id} {...card} onCardClick = {onCardClick} onCardLike = {onCardLike} onCardDelete = {onCardDelete} />)}\r\n      </ul>     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer(){\r\n  return(\r\n    <footer className=\"footer\">\r\n      &copy; 2020 Mesto Russia\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({title, name, children, buttonTitle, isOpen, onClose, onSubmit}){\r\n  return(\r\n    <div className={isOpen ? `popup popup${name} popup_opened` : `popup popup${name}`}>\r\n          <div className=\"popup__container\">\r\n            <h3 className=\"popup__title\">{title}</h3>\r\n            <form  className={`popup__form popup__form${name}`} onSubmit = {onSubmit}>\r\n              {children}\r\n              <button className=\"popup__save\" >{buttonTitle}</button>\r\n            </form>\r\n            <button className=\"popup__close\" onClick={onClose}></button>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport {useContext, useState} from 'react';\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}){\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] =  useState('');\r\n  const [description, setDescription] =  useState('');\r\n    \r\n  React.useEffect(() => {\r\n    setName(currentUser.name || '');\r\n    setDescription(currentUser.about || '');\r\n  }, [currentUser]); \r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  } \r\n  \r\n  return(\r\n    <div>\r\n      <PopupWithForm \r\n          title = {'Редактировать профиль'}\r\n          name = {'EditProfile'}\r\n          buttonTitle = {'Сохранить'}\r\n          isOpen = {isOpen}\r\n          children = {\r\n            <>\r\n              <input type=\"text\" value={name} className=\"popup__input popup__name\" id='name-input' required minLength=\"2\" maxLength=\"40\" onChange={handleChangeName}/>\r\n              <span className='popup__input_error' id='name-input-error'></span>\r\n              <input type=\"text\" value={description} className=\"popup__input popup__about\" id='about-input' required minLength=\"2\" maxLength=\"200\" onChange={handleChangeDescription}/>\r\n              <span className='popup__input_error' id='about-input-error'></span>\r\n            </>\r\n          }\r\n          onClose = {onClose}\r\n          onSubmit = {handleSubmit}\r\n        />  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}){\r\n  const avatarRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar:avatarRef.current.value\r\n    });\r\n  } \r\n\r\n  return(\r\n    <div>\r\n      <PopupWithForm \r\n          title = {'Обновить аватар'}\r\n          name = {'EditProfileAvatar'}\r\n          buttonTitle = {'Сохранить'}\r\n          isOpen = {isOpen}\r\n          children = {\r\n            <>\r\n              <input type=\"url\" ref = {avatarRef} className=\"popup__input popup__linkForAvatar\" name = \"linkAvatar\" id='linkForAvatar-input'  placeholder=\"Ссылка на аватар\" required />\r\n              <span className='popup__input_error' id='linkForAvatar-input-error'></span>\r\n            </>\r\n          }\r\n          onClose = {onClose}\r\n          onSubmit = {handleSubmit}\r\n        /> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup ({isOpen, onClose, onSubmitCard}){\r\n  const cardNameRef = React.useRef();\r\n  const cardLinkRef = React.useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSubmitCard({\r\n      name:cardNameRef.current.value,\r\n      link:cardLinkRef.current.value\r\n    });\r\n  } \r\n\r\n  return(\r\n    <div>\r\n      <PopupWithForm \r\n          title = {'Новое место'}\r\n          name = {'AddCard'}\r\n          buttonTitle = {'Создать'}\r\n          isOpen = {isOpen}\r\n          children = {\r\n            <>\r\n              <input type=\"text\" ref = {cardNameRef} className=\"popup__input popup__nameOfPlace\" name = \"name\" id='nameOfPlace-input' placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" /> \r\n              <span className='popup__input_error' id='nameOfPlace-input-error'></span>\r\n              <input type=\"url\" ref = {cardLinkRef} className=\"popup__input popup__linkForPicture\" name = \"link\" id='linkForPicture-input' placeholder=\"Ссылка на картинку\" required />\r\n              <span className='popup__input_error' id='linkForPicture-input-error'></span>\r\n            </>\r\n          }\r\n          onClose = {onClose}\r\n          onSubmit = {handleSubmit}\r\n        />  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nfunction ImagePopup({card, onClose}){\r\n  return (\r\n    card ? (\r\n      <div className={\"popup popupPicture popup_opened\"}>\r\n        <div className=\"popupPicture__container\">\r\n          <img src={card.link} alt=\"Место из названия\" className=\"popupPicture__image\" />\r\n          <h3 className=\"popupPicture__title\">{card.name}</h3>\r\n          <button className=\"popup__close\" onClick={onClose}></button>\r\n        </div>\r\n      </div>\r\n    ) : null)\r\n  \r\n}\r\n\r\nexport default ImagePopup;","class Api{\r\n  constructor({url, headers}){\r\n    this.url = url;\r\n    this.headers = headers;\r\n  }\r\n  \r\n  getUserInfo(){\r\n    return fetch(`${this.url}/users/me`, {\r\n      headers: this.headers\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  getCardsFromServer(){\r\n    return fetch(`${this.url}/cards`, {\r\n      headers: this.headers\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  changeUserInfo({name, about}){\r\n    return fetch(`${this.url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({name, about})\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  changeAvatar(items){\r\n    return fetch(`${this.url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify(items)\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  addNewCard(items){\r\n    return fetch(`${this.url}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify(items)\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  deleteCard(id){\r\n    return fetch(`${this.url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked){\r\n    return fetch(`${this.url}/cards/likes/${id}`, {\r\n      method: isLiked ?  'PUT' : 'DELETE',\r\n      headers: this.headers\r\n    })\r\n    .then(res =>{ \r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  _getResponseData(res){    \r\n    if(res.ok){\r\n      return res.json()\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    authorization: '2211156a-197b-42d9-becd-f429311725f7'\r\n  }\r\n})\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, isOpenEditProfile] =  useState(false);\r\n  const [isAddPlacePopupOpen, isOpenAddPlace] =  useState(false);\r\n  const [isEditAvatarPopupOpen, isOpenEditAvatar] =  useState(false);\r\n  const [selectedCard, isOpenSelectedCard] =  useState(null);\r\n  const [currentUser, setCurrentUser] =  useState({});\r\n  const [cards, setCards] =  useState([]);\r\n  \r\n  useEffect(()=>{\r\n    Promise.all([ \r\n      api.getUserInfo(), \r\n      api.getCardsFromServer() \r\n    ]) \r\n    .then( \r\n      json=>{ \r\n        const [userInfo, data] = json; \r\n        setCurrentUser(userInfo)\r\n        const items = data.map(item => ({ \r\n          link: item.link,\r\n          likes: item.likes,\r\n          name: item.name,\r\n          _id:item._id,\r\n          owner:item.owner\r\n          })) \r\n          setCards(items) \r\n        }\r\n    )\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n  } \r\n\r\n  function handleCardDelete(card){\r\n    api.deleteCard(card._id).then(() => {\r\n      const newCards = cards.filter((c) => c._id !== card._id );\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n  }\r\n\r\n  function handleEditProfileClick(){\r\n    isOpenEditProfile(true);\r\n  }\r\n\r\n  function handleEditAvatarClick(){\r\n    isOpenEditAvatar(true);\r\n  }\r\n\r\n  function handleAddPlaceClick(){\r\n    isOpenAddPlace(true);\r\n  }\r\n\r\n  function handleUpdateUser(user){\r\n    api.changeUserInfo(user)\r\n    .then(res=>{\r\n      setCurrentUser(res)\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n    isOpenEditProfile(false);\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar){\r\n    api.changeAvatar(avatar)\r\n    .then(res=>{\r\n      setCurrentUser(res)\r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n    isOpenEditAvatar(false);\r\n  }\r\n\r\n  function handleAddPlaceSubmit(card){\r\n    api.addNewCard(card).then(\r\n      (newCard) => {\r\n      setCards([...cards, newCard]); \r\n    })\r\n    .catch((err) => { \r\n      console.log(err);  \r\n    }); \r\n    isOpenAddPlace(false);\r\n  }\r\n\r\n  function closeAllPopups(){\r\n    isOpenEditProfile(false);\r\n    isOpenEditAvatar(false);\r\n    isOpenAddPlace(false);\r\n    isOpenSelectedCard(null)\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n      <div className=\"page__container\">\r\n        <Header />\r\n        <Main \r\n          onEditProfile = {handleEditProfileClick}\r\n          onAddPlace = {handleAddPlaceClick}\r\n          onEditAvatar = {handleEditAvatarClick}\r\n          onCardClick = {isOpenSelectedCard}\r\n          cards = {cards}\r\n          onCardLike = {handleCardLike}\r\n          onCardDelete = {handleCardDelete}\r\n        />\r\n        <Footer />\r\n        \r\n        <EditProfilePopup \r\n          isOpen={isEditProfilePopupOpen} \r\n          onClose={closeAllPopups} \r\n          onUpdateUser = {handleUpdateUser} \r\n        /> \r\n\r\n        <EditAvatarPopup \r\n          isOpen={isEditAvatarPopupOpen} \r\n          onClose={closeAllPopups} \r\n          onUpdateAvatar = {handleUpdateAvatar}\r\n        /> \r\n\r\n        <AddPlacePopup \r\n          isOpen={isAddPlacePopupOpen} \r\n          onClose={closeAllPopups} \r\n          onSubmitCard = {handleAddPlaceSubmit}\r\n        />\r\n\r\n        <PopupWithForm \r\n          title = {'Вы уверены?'}\r\n          name = {'DeleteCard'}\r\n          buttonTitle = {'Да'}\r\n        /> \r\n          \r\n        <ImagePopup \r\n          card = {selectedCard}\r\n          onClose = {closeAllPopups}\r\n        />\r\n      </div>\r\n    </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}